//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VideoStore.Client1.svc {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StarRating", Namespace="http://schemas.datacontract.org/2004/07/VideoStore.Contracts")]
    public enum StarRating : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        One = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Two = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Three = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Four = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Five = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svc.IStatistics")]
    public interface IStatistics {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatistics/GetAverageRentalsForYear", ReplyAction="http://tempuri.org/IStatistics/GetAverageRentalsForYearResponse")]
        decimal GetAverageRentalsForYear(int year);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStatistics/GetAverageRentalsForYear", ReplyAction="http://tempuri.org/IStatistics/GetAverageRentalsForYearResponse")]
        System.IAsyncResult BeginGetAverageRentalsForYear(int year, System.AsyncCallback callback, object asyncState);
        
        decimal EndGetAverageRentalsForYear(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStatistics/RateService")]
        void RateService(VideoStore.Client1.svc.StarRating rating);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IStatistics/RateService")]
        System.IAsyncResult BeginRateService(VideoStore.Client1.svc.StarRating rating, System.AsyncCallback callback, object asyncState);
        
        void EndRateService(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IStatisticsChannel : VideoStore.Client1.svc.IStatistics, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAverageRentalsForYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAverageRentalsForYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class StatisticsClient : System.ServiceModel.ClientBase<VideoStore.Client1.svc.IStatistics>, VideoStore.Client1.svc.IStatistics {
        
        private BeginOperationDelegate onBeginGetAverageRentalsForYearDelegate;
        
        private EndOperationDelegate onEndGetAverageRentalsForYearDelegate;
        
        private System.Threading.SendOrPostCallback onGetAverageRentalsForYearCompletedDelegate;
        
        private BeginOperationDelegate onBeginRateServiceDelegate;
        
        private EndOperationDelegate onEndRateServiceDelegate;
        
        private System.Threading.SendOrPostCallback onRateServiceCompletedDelegate;
        
        public StatisticsClient() {
        }
        
        public StatisticsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatisticsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAverageRentalsForYearCompletedEventArgs> GetAverageRentalsForYearCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RateServiceCompleted;
        
        public decimal GetAverageRentalsForYear(int year) {
            return base.Channel.GetAverageRentalsForYear(year);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAverageRentalsForYear(int year, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAverageRentalsForYear(year, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndGetAverageRentalsForYear(System.IAsyncResult result) {
            return base.Channel.EndGetAverageRentalsForYear(result);
        }
        
        private System.IAsyncResult OnBeginGetAverageRentalsForYear(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int year = ((int)(inValues[0]));
            return this.BeginGetAverageRentalsForYear(year, callback, asyncState);
        }
        
        private object[] OnEndGetAverageRentalsForYear(System.IAsyncResult result) {
            decimal retVal = this.EndGetAverageRentalsForYear(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAverageRentalsForYearCompleted(object state) {
            if ((this.GetAverageRentalsForYearCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAverageRentalsForYearCompleted(this, new GetAverageRentalsForYearCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAverageRentalsForYearAsync(int year) {
            this.GetAverageRentalsForYearAsync(year, null);
        }
        
        public void GetAverageRentalsForYearAsync(int year, object userState) {
            if ((this.onBeginGetAverageRentalsForYearDelegate == null)) {
                this.onBeginGetAverageRentalsForYearDelegate = new BeginOperationDelegate(this.OnBeginGetAverageRentalsForYear);
            }
            if ((this.onEndGetAverageRentalsForYearDelegate == null)) {
                this.onEndGetAverageRentalsForYearDelegate = new EndOperationDelegate(this.OnEndGetAverageRentalsForYear);
            }
            if ((this.onGetAverageRentalsForYearCompletedDelegate == null)) {
                this.onGetAverageRentalsForYearCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAverageRentalsForYearCompleted);
            }
            base.InvokeAsync(this.onBeginGetAverageRentalsForYearDelegate, new object[] {
                        year}, this.onEndGetAverageRentalsForYearDelegate, this.onGetAverageRentalsForYearCompletedDelegate, userState);
        }
        
        public void RateService(VideoStore.Client1.svc.StarRating rating) {
            base.Channel.RateService(rating);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRateService(VideoStore.Client1.svc.StarRating rating, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRateService(rating, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRateService(System.IAsyncResult result) {
            base.Channel.EndRateService(result);
        }
        
        private System.IAsyncResult OnBeginRateService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            VideoStore.Client1.svc.StarRating rating = ((VideoStore.Client1.svc.StarRating)(inValues[0]));
            return this.BeginRateService(rating, callback, asyncState);
        }
        
        private object[] OnEndRateService(System.IAsyncResult result) {
            this.EndRateService(result);
            return null;
        }
        
        private void OnRateServiceCompleted(object state) {
            if ((this.RateServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RateServiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RateServiceAsync(VideoStore.Client1.svc.StarRating rating) {
            this.RateServiceAsync(rating, null);
        }
        
        public void RateServiceAsync(VideoStore.Client1.svc.StarRating rating, object userState) {
            if ((this.onBeginRateServiceDelegate == null)) {
                this.onBeginRateServiceDelegate = new BeginOperationDelegate(this.OnBeginRateService);
            }
            if ((this.onEndRateServiceDelegate == null)) {
                this.onEndRateServiceDelegate = new EndOperationDelegate(this.OnEndRateService);
            }
            if ((this.onRateServiceCompletedDelegate == null)) {
                this.onRateServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRateServiceCompleted);
            }
            base.InvokeAsync(this.onBeginRateServiceDelegate, new object[] {
                        rating}, this.onEndRateServiceDelegate, this.onRateServiceCompletedDelegate, userState);
        }
    }
}
